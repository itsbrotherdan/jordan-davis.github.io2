// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
function flatten(arr){
  //create empty array
  var list = [];
  //loop over arr
  for (let i = 0; i < arr.length; i++){
    //loop over values of arr
  for (let a = 0; a < arr[i].length; a++){
    //push values to list
      list.push(arr[i][a]);
    }
  }
  //return 
  return list;
  }

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
function loop(start, test, update, value) {
  //loop through using params
  for (let i = start; test(i); i = update(i)){
    //run value func = log
    value(i);
  }
  }
// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, test) {
  //create a true variable
  var isTrue = true;
  //loop throuh arr
  for (let i = 0; i < arr.length; i ++){
    //check if arr value is not 
    if (!test(arr[i])){
      //isTrue to false
      isTrue = false;
    }
  }
  return isTrue;
  }
// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  //create two arrays to store occurencer of ltr rtl
  let ltr = [];
  let rtl = [];
  //iterate through the input string
  for(let i = 0; i < str.length; i++){
    let script = characterScript(str.charCodeAt(i));
    if(script !== null){
    if(script.direction === 'ltr'){
      ltr.push(script);
    }
    else {
      rtl.push(script);
    }
  }
    } if (ltr.length > rtl.length){
    return 'ltr';
    } else {
    return 'rtl';
  }
  }
// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
