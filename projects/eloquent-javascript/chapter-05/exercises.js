// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
function flatten(arr){
  //create empty array
  var list = [];
  //loop over arr
  for (let i = 0; i < arr.length; i++){
    
    //loop again
  for (let a = 0; a < arr[i].length; a++){
    //push to arr
      list.push(arr[i][a]);
    }
  }
  //return 
  return list;
  }

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////
function loop(start, test, update, value) {
  //loop through using params
  for (let i = start; test(i); i = update(i)){
    //run value func = log
    value(i);
  }
  }
// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, test) {
  //create var for true
  var isTrue = true;
  //loop throuh arr
  for (let i = 0; i < arr.length; i ++){
    //check if arr value is not 
    if (!test(arr[i])){
      //isTrue to false
      isTrue = false;
    }
  }
  return isTrue;
  }
// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection() {

}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
